Terminals unused in grammar

    '/'
    Unary


Grammar

    0 $accept: Program $end

    1 Program: MainClass

    2 MainClass: KW_CLASS ID '{' StaticVarDecl StaticMethodDecl MainMethod '}'

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STR '[' ']' ID ')' '{' StatementList '}'

    4 StaticVarDecl: StaticVarDecl KW_PRIVATE KW_STATIC Type ID EqlExp StaticVarDeclTail ';'
    5              | %empty

    6 EqlExp: '=' Exp_or
    7       | %empty

    8 StaticVarDeclTail: StaticVarDeclTail ',' ID EqlExp
    9                  | %empty

   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC Type ID '(' IfFormalList ')' '{' StatementList '}'
   11                 | %empty

   12 IfFormalList: FormalList
   13             | %empty

   14 StatementList: StatementList Statement
   15              | %empty

   16 VarDecl: Type ID EqlExp StaticVarDeclTail ';'

   17 FormalList: Type ID FormalListTail

   18 FormalListTail: FormalListTail ',' Type ID
   19               | %empty

   20 PrimeType: KW_INT
   21          | KW_BOOL
   22          | KW_STR

   23 Type: PrimeType
   24     | Type '[' ']'

   25 Statement: VarDecl
   26          | '{' StatementList '}'
   27          | KW_IF '(' Exp_or ')' Statement KW_ELSE Statement
   28          | KW_WHILE '(' Exp_or ')' Statement
   29          | KW_SYSTEM '.' KW_OUT '.' KW_PRINTLN '(' Exp_or ')' ';'
   30          | KW_SYSTEM '.' KW_OUT '.' KW_PRINT '(' Exp_or ')' ';'
   31          | LeftValue '=' Exp_or ';'
   32          | KW_RETURN Exp_or ';'
   33          | MethodCall ';'

   34 MethodCall: ID '(' ExpList ')'
   35           | ID '(' ')'
   36           | CLASS_INTEGER '.' INTEGER_PARSEINT '(' Exp_or ')'

   37 Exp_or: Exp_or TOK_OR Exp_and
   38       | Exp_and

   39 Exp_and: Exp_and TOK_AND Exp_eql
   40        | Exp_eql

   41 Exp_eql: Exp_eql TOK_EQLEQL Exp_ineql
   42        | Exp_eql TOK_NEQ Exp_ineql
   43        | Exp_ineql

   44 Exp_ineql: Exp_ineql '<' Exp_plusminus
   45          | Exp_ineql '>' Exp_plusminus
   46          | Exp_ineql TOK_LEQ Exp_plusminus
   47          | Exp_ineql TOK_GEQ Exp_plusminus
   48          | Exp_plusminus

   49 Exp_plusminus: Exp_plusminus '+' Exp_muldiv
   50              | Exp_plusminus '-' Exp_muldiv
   51              | Exp_muldiv

   52 Exp_muldiv: Exp_muldiv '*' Exp_factor
   53           | Exp_factor

   54 Exp_factor: Factor

   55 Factor: '!' Factor
   56       | '+' Factor
   57       | '-' Factor
   58       | '(' Exp_or ')'
   59       | LeftValue
   60       | LeftValue '.' STRING_LENGTH
   61       | INT_LIT
   62       | STR_LIT
   63       | KW_TRUE
   64       | KW_FALSE
   65       | MethodCall
   66       | KW_NEW PrimeType Index

   67 ExpList: Exp_or ExpListTail

   68 ExpListTail: ExpListTail ',' Exp_or
   69            | %empty

   70 Index: Index '[' Exp_or ']'
   71      | '[' Exp_or ']'

   72 LeftValue: ID
   73          | LeftValue '[' Exp_or ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 55
    '(' (40) 3 10 27 28 29 30 34 35 36 58
    ')' (41) 3 10 27 28 29 30 34 35 36 58
    '*' (42) 52
    '+' (43) 49 56
    ',' (44) 8 18 68
    '-' (45) 50 57
    '.' (46) 29 30 36 60
    '/' (47)
    ';' (59) 4 16 29 30 31 32 33
    '<' (60) 44
    '=' (61) 6 31
    '>' (62) 45
    '[' (91) 3 24 70 71 73
    ']' (93) 3 24 70 71 73
    '{' (123) 2 3 10 26
    '}' (125) 2 3 10 26
    error (256)
    TOK_AND (258) 39
    TOK_NEQ (259) 42
    TOK_OR (260) 37
    TOK_LEQ (261) 46
    TOK_GEQ (262) 47
    TOK_EQLEQL (263) 41
    MAIN (264) 3
    KW_PUBLIC (265) 3 10
    KW_PRIVATE (266) 4
    KW_STATIC (267) 3 4 10
    KW_CLASS (268) 2
    KW_VOID (269) 3
    KW_INT (270) 20
    KW_BOOL (271) 21
    KW_STR (272) 3 22
    KW_IF (273) 27
    KW_ELSE (274) 27
    KW_WHILE (275) 28
    KW_NEW (276) 66
    KW_RETURN (277) 32
    KW_SYSTEM (278) 29 30
    KW_OUT (279) 29 30
    KW_PRINT (280) 30
    KW_PRINTLN (281) 29
    KW_TRUE (282) 63
    KW_FALSE (283) 64
    CLASS_INTEGER (284) 36
    INTEGER_PARSEINT (285) 36
    STRING_LENGTH (286) 60
    INT_LIT <integer> (287) 61
    STR_LIT <string> (288) 62
    ID <string> (289) 2 3 4 8 10 16 17 18 34 35 72
    Unary (290)
    Paren (291)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    Program <node> (55)
        on left: 1
        on right: 0
    MainClass <node> (56)
        on left: 2
        on right: 1
    MainMethod <node> (57)
        on left: 3
        on right: 2
    StaticVarDecl <node> (58)
        on left: 4 5
        on right: 2 4
    EqlExp <node> (59)
        on left: 6 7
        on right: 4 8 16
    StaticVarDeclTail <node> (60)
        on left: 8 9
        on right: 4 8 16
    StaticMethodDecl <node> (61)
        on left: 10 11
        on right: 2 10
    IfFormalList <node> (62)
        on left: 12 13
        on right: 10
    StatementList <node> (63)
        on left: 14 15
        on right: 3 10 14 26
    VarDecl <node> (64)
        on left: 16
        on right: 25
    FormalList <node> (65)
        on left: 17
        on right: 12
    FormalListTail <node> (66)
        on left: 18 19
        on right: 17 18
    PrimeType <node> (67)
        on left: 20 21 22
        on right: 23 66
    Type <node> (68)
        on left: 23 24
        on right: 4 10 16 17 18 24
    Statement <node> (69)
        on left: 25 26 27 28 29 30 31 32 33
        on right: 14 27 28
    MethodCall <node> (70)
        on left: 34 35 36
        on right: 33 65
    Exp_or <node> (71)
        on left: 37 38
        on right: 6 27 28 29 30 31 32 36 37 58 67 68 70 71 73
    Exp_and <node> (72)
        on left: 39 40
        on right: 37 38 39
    Exp_eql <node> (73)
        on left: 41 42 43
        on right: 39 40 41 42
    Exp_ineql <node> (74)
        on left: 44 45 46 47 48
        on right: 41 42 43 44 45 46 47
    Exp_plusminus <node> (75)
        on left: 49 50 51
        on right: 44 45 46 47 48 49 50
    Exp_muldiv <node> (76)
        on left: 52 53
        on right: 49 50 51 52
    Exp_factor <node> (77)
        on left: 54
        on right: 52 53
    Factor <node> (78)
        on left: 55 56 57 58 59 60 61 62 63 64 65 66
        on right: 54 55 56 57
    ExpList <node> (79)
        on left: 67
        on right: 34
    ExpListTail <node> (80)
        on left: 68 69
        on right: 67 68
    Index <node> (81)
        on left: 70 71
        on right: 66 70
    LeftValue <node> (82)
        on left: 72 73
        on right: 31 59 60 73


State 0

    0 $accept: . Program $end

    KW_CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: KW_CLASS . ID '{' StaticVarDecl StaticMethodDecl MainMethod '}'

    ID  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: MainClass .

    $default  reduce using rule 1 (Program)


State 4

    2 MainClass: KW_CLASS ID . '{' StaticVarDecl StaticMethodDecl MainMethod '}'

    '{'  shift, and go to state 6


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    2 MainClass: KW_CLASS ID '{' . StaticVarDecl StaticMethodDecl MainMethod '}'

    $default  reduce using rule 5 (StaticVarDecl)

    StaticVarDecl  go to state 7


State 7

    2 MainClass: KW_CLASS ID '{' StaticVarDecl . StaticMethodDecl MainMethod '}'
    4 StaticVarDecl: StaticVarDecl . KW_PRIVATE KW_STATIC Type ID EqlExp StaticVarDeclTail ';'

    KW_PRIVATE  shift, and go to state 8

    $default  reduce using rule 11 (StaticMethodDecl)

    StaticMethodDecl  go to state 9


State 8

    4 StaticVarDecl: StaticVarDecl KW_PRIVATE . KW_STATIC Type ID EqlExp StaticVarDeclTail ';'

    KW_STATIC  shift, and go to state 10


State 9

    2 MainClass: KW_CLASS ID '{' StaticVarDecl StaticMethodDecl . MainMethod '}'
   10 StaticMethodDecl: StaticMethodDecl . KW_PUBLIC KW_STATIC Type ID '(' IfFormalList ')' '{' StatementList '}'

    KW_PUBLIC  shift, and go to state 11

    MainMethod  go to state 12


State 10

    4 StaticVarDecl: StaticVarDecl KW_PRIVATE KW_STATIC . Type ID EqlExp StaticVarDeclTail ';'

    KW_INT   shift, and go to state 13
    KW_BOOL  shift, and go to state 14
    KW_STR   shift, and go to state 15

    PrimeType  go to state 16
    Type       go to state 17


State 11

    3 MainMethod: KW_PUBLIC . KW_STATIC KW_VOID MAIN '(' KW_STR '[' ']' ID ')' '{' StatementList '}'
   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC . KW_STATIC Type ID '(' IfFormalList ')' '{' StatementList '}'

    KW_STATIC  shift, and go to state 18


State 12

    2 MainClass: KW_CLASS ID '{' StaticVarDecl StaticMethodDecl MainMethod . '}'

    '}'  shift, and go to state 19


State 13

   20 PrimeType: KW_INT .

    $default  reduce using rule 20 (PrimeType)


State 14

   21 PrimeType: KW_BOOL .

    $default  reduce using rule 21 (PrimeType)


State 15

   22 PrimeType: KW_STR .

    $default  reduce using rule 22 (PrimeType)


State 16

   23 Type: PrimeType .

    $default  reduce using rule 23 (Type)


State 17

    4 StaticVarDecl: StaticVarDecl KW_PRIVATE KW_STATIC Type . ID EqlExp StaticVarDeclTail ';'
   24 Type: Type . '[' ']'

    ID   shift, and go to state 20
    '['  shift, and go to state 21


State 18

    3 MainMethod: KW_PUBLIC KW_STATIC . KW_VOID MAIN '(' KW_STR '[' ']' ID ')' '{' StatementList '}'
   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC . Type ID '(' IfFormalList ')' '{' StatementList '}'

    KW_VOID  shift, and go to state 22
    KW_INT   shift, and go to state 13
    KW_BOOL  shift, and go to state 14
    KW_STR   shift, and go to state 15

    PrimeType  go to state 16
    Type       go to state 23


State 19

    2 MainClass: KW_CLASS ID '{' StaticVarDecl StaticMethodDecl MainMethod '}' .

    $default  reduce using rule 2 (MainClass)


State 20

    4 StaticVarDecl: StaticVarDecl KW_PRIVATE KW_STATIC Type ID . EqlExp StaticVarDeclTail ';'

    '='  shift, and go to state 24

    $default  reduce using rule 7 (EqlExp)

    EqlExp  go to state 25


State 21

   24 Type: Type '[' . ']'

    ']'  shift, and go to state 26


State 22

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID . MAIN '(' KW_STR '[' ']' ID ')' '{' StatementList '}'

    MAIN  shift, and go to state 27


State 23

   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC Type . ID '(' IfFormalList ')' '{' StatementList '}'
   24 Type: Type . '[' ']'

    ID   shift, and go to state 28
    '['  shift, and go to state 21


State 24

    6 EqlExp: '=' . Exp_or

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 41
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 25

    4 StaticVarDecl: StaticVarDecl KW_PRIVATE KW_STATIC Type ID EqlExp . StaticVarDeclTail ';'

    $default  reduce using rule 9 (StaticVarDeclTail)

    StaticVarDeclTail  go to state 50


State 26

   24 Type: Type '[' ']' .

    $default  reduce using rule 24 (Type)


State 27

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN . '(' KW_STR '[' ']' ID ')' '{' StatementList '}'

    '('  shift, and go to state 51


State 28

   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC Type ID . '(' IfFormalList ')' '{' StatementList '}'

    '('  shift, and go to state 52


State 29

   66 Factor: KW_NEW . PrimeType Index

    KW_INT   shift, and go to state 13
    KW_BOOL  shift, and go to state 14
    KW_STR   shift, and go to state 15

    PrimeType  go to state 53


State 30

   63 Factor: KW_TRUE .

    $default  reduce using rule 63 (Factor)


State 31

   64 Factor: KW_FALSE .

    $default  reduce using rule 64 (Factor)


State 32

   36 MethodCall: CLASS_INTEGER . '.' INTEGER_PARSEINT '(' Exp_or ')'

    '.'  shift, and go to state 54


State 33

   61 Factor: INT_LIT .

    $default  reduce using rule 61 (Factor)


State 34

   62 Factor: STR_LIT .

    $default  reduce using rule 62 (Factor)


State 35

   34 MethodCall: ID . '(' ExpList ')'
   35           | ID . '(' ')'
   72 LeftValue: ID .

    '('  shift, and go to state 55

    $default  reduce using rule 72 (LeftValue)


State 36

   56 Factor: '+' . Factor

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall  go to state 40
    Factor      go to state 56
    LeftValue   go to state 49


State 37

   57 Factor: '-' . Factor

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall  go to state 40
    Factor      go to state 57
    LeftValue   go to state 49


State 38

   58 Factor: '(' . Exp_or ')'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 58
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 39

   55 Factor: '!' . Factor

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall  go to state 40
    Factor      go to state 59
    LeftValue   go to state 49


State 40

   65 Factor: MethodCall .

    $default  reduce using rule 65 (Factor)


State 41

    6 EqlExp: '=' Exp_or .
   37 Exp_or: Exp_or . TOK_OR Exp_and

    TOK_OR  shift, and go to state 60

    $default  reduce using rule 6 (EqlExp)


State 42

   38 Exp_or: Exp_and .
   39 Exp_and: Exp_and . TOK_AND Exp_eql

    TOK_AND  shift, and go to state 61

    $default  reduce using rule 38 (Exp_or)


State 43

   40 Exp_and: Exp_eql .
   41 Exp_eql: Exp_eql . TOK_EQLEQL Exp_ineql
   42        | Exp_eql . TOK_NEQ Exp_ineql

    TOK_NEQ     shift, and go to state 62
    TOK_EQLEQL  shift, and go to state 63

    $default  reduce using rule 40 (Exp_and)


State 44

   43 Exp_eql: Exp_ineql .
   44 Exp_ineql: Exp_ineql . '<' Exp_plusminus
   45          | Exp_ineql . '>' Exp_plusminus
   46          | Exp_ineql . TOK_LEQ Exp_plusminus
   47          | Exp_ineql . TOK_GEQ Exp_plusminus

    TOK_LEQ  shift, and go to state 64
    TOK_GEQ  shift, and go to state 65
    '<'      shift, and go to state 66
    '>'      shift, and go to state 67

    $default  reduce using rule 43 (Exp_eql)


State 45

   48 Exp_ineql: Exp_plusminus .
   49 Exp_plusminus: Exp_plusminus . '+' Exp_muldiv
   50              | Exp_plusminus . '-' Exp_muldiv

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 48 (Exp_ineql)


State 46

   51 Exp_plusminus: Exp_muldiv .
   52 Exp_muldiv: Exp_muldiv . '*' Exp_factor

    '*'  shift, and go to state 70

    $default  reduce using rule 51 (Exp_plusminus)


State 47

   53 Exp_muldiv: Exp_factor .

    $default  reduce using rule 53 (Exp_muldiv)


State 48

   54 Exp_factor: Factor .

    $default  reduce using rule 54 (Exp_factor)


State 49

   59 Factor: LeftValue .
   60       | LeftValue . '.' STRING_LENGTH
   73 LeftValue: LeftValue . '[' Exp_or ']'

    '['  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 59 (Factor)


State 50

    4 StaticVarDecl: StaticVarDecl KW_PRIVATE KW_STATIC Type ID EqlExp StaticVarDeclTail . ';'
    8 StaticVarDeclTail: StaticVarDeclTail . ',' ID EqlExp

    ';'  shift, and go to state 73
    ','  shift, and go to state 74


State 51

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' . KW_STR '[' ']' ID ')' '{' StatementList '}'

    KW_STR  shift, and go to state 75


State 52

   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC Type ID '(' . IfFormalList ')' '{' StatementList '}'

    KW_INT   shift, and go to state 13
    KW_BOOL  shift, and go to state 14
    KW_STR   shift, and go to state 15

    $default  reduce using rule 13 (IfFormalList)

    IfFormalList  go to state 76
    FormalList    go to state 77
    PrimeType     go to state 16
    Type          go to state 78


State 53

   66 Factor: KW_NEW PrimeType . Index

    '['  shift, and go to state 79

    Index  go to state 80


State 54

   36 MethodCall: CLASS_INTEGER '.' . INTEGER_PARSEINT '(' Exp_or ')'

    INTEGER_PARSEINT  shift, and go to state 81


State 55

   34 MethodCall: ID '(' . ExpList ')'
   35           | ID '(' . ')'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    ')'            shift, and go to state 82
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 83
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    ExpList        go to state 84
    LeftValue      go to state 49


State 56

   56 Factor: '+' Factor .

    $default  reduce using rule 56 (Factor)


State 57

   57 Factor: '-' Factor .

    $default  reduce using rule 57 (Factor)


State 58

   37 Exp_or: Exp_or . TOK_OR Exp_and
   58 Factor: '(' Exp_or . ')'

    TOK_OR  shift, and go to state 60
    ')'     shift, and go to state 85


State 59

   55 Factor: '!' Factor .

    $default  reduce using rule 55 (Factor)


State 60

   37 Exp_or: Exp_or TOK_OR . Exp_and

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_and        go to state 86
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 61

   39 Exp_and: Exp_and TOK_AND . Exp_eql

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_eql        go to state 87
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 62

   42 Exp_eql: Exp_eql TOK_NEQ . Exp_ineql

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_ineql      go to state 88
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 63

   41 Exp_eql: Exp_eql TOK_EQLEQL . Exp_ineql

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_ineql      go to state 89
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 64

   46 Exp_ineql: Exp_ineql TOK_LEQ . Exp_plusminus

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_plusminus  go to state 90
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 65

   47 Exp_ineql: Exp_ineql TOK_GEQ . Exp_plusminus

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_plusminus  go to state 91
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 66

   44 Exp_ineql: Exp_ineql '<' . Exp_plusminus

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_plusminus  go to state 92
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 67

   45 Exp_ineql: Exp_ineql '>' . Exp_plusminus

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_plusminus  go to state 93
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 68

   49 Exp_plusminus: Exp_plusminus '+' . Exp_muldiv

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall  go to state 40
    Exp_muldiv  go to state 94
    Exp_factor  go to state 47
    Factor      go to state 48
    LeftValue   go to state 49


State 69

   50 Exp_plusminus: Exp_plusminus '-' . Exp_muldiv

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall  go to state 40
    Exp_muldiv  go to state 95
    Exp_factor  go to state 47
    Factor      go to state 48
    LeftValue   go to state 49


State 70

   52 Exp_muldiv: Exp_muldiv '*' . Exp_factor

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall  go to state 40
    Exp_factor  go to state 96
    Factor      go to state 48
    LeftValue   go to state 49


State 71

   73 LeftValue: LeftValue '[' . Exp_or ']'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 97
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 72

   60 Factor: LeftValue '.' . STRING_LENGTH

    STRING_LENGTH  shift, and go to state 98


State 73

    4 StaticVarDecl: StaticVarDecl KW_PRIVATE KW_STATIC Type ID EqlExp StaticVarDeclTail ';' .

    $default  reduce using rule 4 (StaticVarDecl)


State 74

    8 StaticVarDeclTail: StaticVarDeclTail ',' . ID EqlExp

    ID  shift, and go to state 99


State 75

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STR . '[' ']' ID ')' '{' StatementList '}'

    '['  shift, and go to state 100


State 76

   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC Type ID '(' IfFormalList . ')' '{' StatementList '}'

    ')'  shift, and go to state 101


State 77

   12 IfFormalList: FormalList .

    $default  reduce using rule 12 (IfFormalList)


State 78

   17 FormalList: Type . ID FormalListTail
   24 Type: Type . '[' ']'

    ID   shift, and go to state 102
    '['  shift, and go to state 21


State 79

   71 Index: '[' . Exp_or ']'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 103
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 80

   66 Factor: KW_NEW PrimeType Index .
   70 Index: Index . '[' Exp_or ']'

    '['  shift, and go to state 104

    $default  reduce using rule 66 (Factor)


State 81

   36 MethodCall: CLASS_INTEGER '.' INTEGER_PARSEINT . '(' Exp_or ')'

    '('  shift, and go to state 105


State 82

   35 MethodCall: ID '(' ')' .

    $default  reduce using rule 35 (MethodCall)


State 83

   37 Exp_or: Exp_or . TOK_OR Exp_and
   67 ExpList: Exp_or . ExpListTail

    TOK_OR  shift, and go to state 60

    $default  reduce using rule 69 (ExpListTail)

    ExpListTail  go to state 106


State 84

   34 MethodCall: ID '(' ExpList . ')'

    ')'  shift, and go to state 107


State 85

   58 Factor: '(' Exp_or ')' .

    $default  reduce using rule 58 (Factor)


State 86

   37 Exp_or: Exp_or TOK_OR Exp_and .
   39 Exp_and: Exp_and . TOK_AND Exp_eql

    TOK_AND  shift, and go to state 61

    $default  reduce using rule 37 (Exp_or)


State 87

   39 Exp_and: Exp_and TOK_AND Exp_eql .
   41 Exp_eql: Exp_eql . TOK_EQLEQL Exp_ineql
   42        | Exp_eql . TOK_NEQ Exp_ineql

    TOK_NEQ     shift, and go to state 62
    TOK_EQLEQL  shift, and go to state 63

    $default  reduce using rule 39 (Exp_and)


State 88

   42 Exp_eql: Exp_eql TOK_NEQ Exp_ineql .
   44 Exp_ineql: Exp_ineql . '<' Exp_plusminus
   45          | Exp_ineql . '>' Exp_plusminus
   46          | Exp_ineql . TOK_LEQ Exp_plusminus
   47          | Exp_ineql . TOK_GEQ Exp_plusminus

    TOK_LEQ  shift, and go to state 64
    TOK_GEQ  shift, and go to state 65
    '<'      shift, and go to state 66
    '>'      shift, and go to state 67

    $default  reduce using rule 42 (Exp_eql)


State 89

   41 Exp_eql: Exp_eql TOK_EQLEQL Exp_ineql .
   44 Exp_ineql: Exp_ineql . '<' Exp_plusminus
   45          | Exp_ineql . '>' Exp_plusminus
   46          | Exp_ineql . TOK_LEQ Exp_plusminus
   47          | Exp_ineql . TOK_GEQ Exp_plusminus

    TOK_LEQ  shift, and go to state 64
    TOK_GEQ  shift, and go to state 65
    '<'      shift, and go to state 66
    '>'      shift, and go to state 67

    $default  reduce using rule 41 (Exp_eql)


State 90

   46 Exp_ineql: Exp_ineql TOK_LEQ Exp_plusminus .
   49 Exp_plusminus: Exp_plusminus . '+' Exp_muldiv
   50              | Exp_plusminus . '-' Exp_muldiv

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 46 (Exp_ineql)


State 91

   47 Exp_ineql: Exp_ineql TOK_GEQ Exp_plusminus .
   49 Exp_plusminus: Exp_plusminus . '+' Exp_muldiv
   50              | Exp_plusminus . '-' Exp_muldiv

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 47 (Exp_ineql)


State 92

   44 Exp_ineql: Exp_ineql '<' Exp_plusminus .
   49 Exp_plusminus: Exp_plusminus . '+' Exp_muldiv
   50              | Exp_plusminus . '-' Exp_muldiv

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 44 (Exp_ineql)


State 93

   45 Exp_ineql: Exp_ineql '>' Exp_plusminus .
   49 Exp_plusminus: Exp_plusminus . '+' Exp_muldiv
   50              | Exp_plusminus . '-' Exp_muldiv

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 45 (Exp_ineql)


State 94

   49 Exp_plusminus: Exp_plusminus '+' Exp_muldiv .
   52 Exp_muldiv: Exp_muldiv . '*' Exp_factor

    '*'  shift, and go to state 70

    $default  reduce using rule 49 (Exp_plusminus)


State 95

   50 Exp_plusminus: Exp_plusminus '-' Exp_muldiv .
   52 Exp_muldiv: Exp_muldiv . '*' Exp_factor

    '*'  shift, and go to state 70

    $default  reduce using rule 50 (Exp_plusminus)


State 96

   52 Exp_muldiv: Exp_muldiv '*' Exp_factor .

    $default  reduce using rule 52 (Exp_muldiv)


State 97

   37 Exp_or: Exp_or . TOK_OR Exp_and
   73 LeftValue: LeftValue '[' Exp_or . ']'

    TOK_OR  shift, and go to state 60
    ']'     shift, and go to state 108


State 98

   60 Factor: LeftValue '.' STRING_LENGTH .

    $default  reduce using rule 60 (Factor)


State 99

    8 StaticVarDeclTail: StaticVarDeclTail ',' ID . EqlExp

    '='  shift, and go to state 24

    $default  reduce using rule 7 (EqlExp)

    EqlExp  go to state 109


State 100

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STR '[' . ']' ID ')' '{' StatementList '}'

    ']'  shift, and go to state 110


State 101

   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC Type ID '(' IfFormalList ')' . '{' StatementList '}'

    '{'  shift, and go to state 111


State 102

   17 FormalList: Type ID . FormalListTail

    $default  reduce using rule 19 (FormalListTail)

    FormalListTail  go to state 112


State 103

   37 Exp_or: Exp_or . TOK_OR Exp_and
   71 Index: '[' Exp_or . ']'

    TOK_OR  shift, and go to state 60
    ']'     shift, and go to state 113


State 104

   70 Index: Index '[' . Exp_or ']'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 114
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 105

   36 MethodCall: CLASS_INTEGER '.' INTEGER_PARSEINT '(' . Exp_or ')'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 115
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 106

   67 ExpList: Exp_or ExpListTail .
   68 ExpListTail: ExpListTail . ',' Exp_or

    ','  shift, and go to state 116

    $default  reduce using rule 67 (ExpList)


State 107

   34 MethodCall: ID '(' ExpList ')' .

    $default  reduce using rule 34 (MethodCall)


State 108

   73 LeftValue: LeftValue '[' Exp_or ']' .

    $default  reduce using rule 73 (LeftValue)


State 109

    8 StaticVarDeclTail: StaticVarDeclTail ',' ID EqlExp .

    $default  reduce using rule 8 (StaticVarDeclTail)


State 110

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STR '[' ']' . ID ')' '{' StatementList '}'

    ID  shift, and go to state 117


State 111

   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC Type ID '(' IfFormalList ')' '{' . StatementList '}'

    $default  reduce using rule 15 (StatementList)

    StatementList  go to state 118


State 112

   17 FormalList: Type ID FormalListTail .
   18 FormalListTail: FormalListTail . ',' Type ID

    ','  shift, and go to state 119

    $default  reduce using rule 17 (FormalList)


State 113

   71 Index: '[' Exp_or ']' .

    $default  reduce using rule 71 (Index)


State 114

   37 Exp_or: Exp_or . TOK_OR Exp_and
   70 Index: Index '[' Exp_or . ']'

    TOK_OR  shift, and go to state 60
    ']'     shift, and go to state 120


State 115

   36 MethodCall: CLASS_INTEGER '.' INTEGER_PARSEINT '(' Exp_or . ')'
   37 Exp_or: Exp_or . TOK_OR Exp_and

    TOK_OR  shift, and go to state 60
    ')'     shift, and go to state 121


State 116

   68 ExpListTail: ExpListTail ',' . Exp_or

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 122
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 117

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STR '[' ']' ID . ')' '{' StatementList '}'

    ')'  shift, and go to state 123


State 118

   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC Type ID '(' IfFormalList ')' '{' StatementList . '}'
   14 StatementList: StatementList . Statement

    KW_INT         shift, and go to state 13
    KW_BOOL        shift, and go to state 14
    KW_STR         shift, and go to state 15
    KW_IF          shift, and go to state 124
    KW_WHILE       shift, and go to state 125
    KW_RETURN      shift, and go to state 126
    KW_SYSTEM      shift, and go to state 127
    CLASS_INTEGER  shift, and go to state 32
    ID             shift, and go to state 35
    '{'            shift, and go to state 128
    '}'            shift, and go to state 129

    VarDecl     go to state 130
    PrimeType   go to state 16
    Type        go to state 131
    Statement   go to state 132
    MethodCall  go to state 133
    LeftValue   go to state 134


State 119

   18 FormalListTail: FormalListTail ',' . Type ID

    KW_INT   shift, and go to state 13
    KW_BOOL  shift, and go to state 14
    KW_STR   shift, and go to state 15

    PrimeType  go to state 16
    Type       go to state 135


State 120

   70 Index: Index '[' Exp_or ']' .

    $default  reduce using rule 70 (Index)


State 121

   36 MethodCall: CLASS_INTEGER '.' INTEGER_PARSEINT '(' Exp_or ')' .

    $default  reduce using rule 36 (MethodCall)


State 122

   37 Exp_or: Exp_or . TOK_OR Exp_and
   68 ExpListTail: ExpListTail ',' Exp_or .

    TOK_OR  shift, and go to state 60

    $default  reduce using rule 68 (ExpListTail)


State 123

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STR '[' ']' ID ')' . '{' StatementList '}'

    '{'  shift, and go to state 136


State 124

   27 Statement: KW_IF . '(' Exp_or ')' Statement KW_ELSE Statement

    '('  shift, and go to state 137


State 125

   28 Statement: KW_WHILE . '(' Exp_or ')' Statement

    '('  shift, and go to state 138


State 126

   32 Statement: KW_RETURN . Exp_or ';'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 139
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 127

   29 Statement: KW_SYSTEM . '.' KW_OUT '.' KW_PRINTLN '(' Exp_or ')' ';'
   30          | KW_SYSTEM . '.' KW_OUT '.' KW_PRINT '(' Exp_or ')' ';'

    '.'  shift, and go to state 140


State 128

   26 Statement: '{' . StatementList '}'

    $default  reduce using rule 15 (StatementList)

    StatementList  go to state 141


State 129

   10 StaticMethodDecl: StaticMethodDecl KW_PUBLIC KW_STATIC Type ID '(' IfFormalList ')' '{' StatementList '}' .

    $default  reduce using rule 10 (StaticMethodDecl)


State 130

   25 Statement: VarDecl .

    $default  reduce using rule 25 (Statement)


State 131

   16 VarDecl: Type . ID EqlExp StaticVarDeclTail ';'
   24 Type: Type . '[' ']'

    ID   shift, and go to state 142
    '['  shift, and go to state 21


State 132

   14 StatementList: StatementList Statement .

    $default  reduce using rule 14 (StatementList)


State 133

   33 Statement: MethodCall . ';'

    ';'  shift, and go to state 143


State 134

   31 Statement: LeftValue . '=' Exp_or ';'
   73 LeftValue: LeftValue . '[' Exp_or ']'

    '='  shift, and go to state 144
    '['  shift, and go to state 71


State 135

   18 FormalListTail: FormalListTail ',' Type . ID
   24 Type: Type . '[' ']'

    ID   shift, and go to state 145
    '['  shift, and go to state 21


State 136

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STR '[' ']' ID ')' '{' . StatementList '}'

    $default  reduce using rule 15 (StatementList)

    StatementList  go to state 146


State 137

   27 Statement: KW_IF '(' . Exp_or ')' Statement KW_ELSE Statement

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 147
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 138

   28 Statement: KW_WHILE '(' . Exp_or ')' Statement

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 148
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 139

   32 Statement: KW_RETURN Exp_or . ';'
   37 Exp_or: Exp_or . TOK_OR Exp_and

    TOK_OR  shift, and go to state 60
    ';'     shift, and go to state 149


State 140

   29 Statement: KW_SYSTEM '.' . KW_OUT '.' KW_PRINTLN '(' Exp_or ')' ';'
   30          | KW_SYSTEM '.' . KW_OUT '.' KW_PRINT '(' Exp_or ')' ';'

    KW_OUT  shift, and go to state 150


State 141

   14 StatementList: StatementList . Statement
   26 Statement: '{' StatementList . '}'

    KW_INT         shift, and go to state 13
    KW_BOOL        shift, and go to state 14
    KW_STR         shift, and go to state 15
    KW_IF          shift, and go to state 124
    KW_WHILE       shift, and go to state 125
    KW_RETURN      shift, and go to state 126
    KW_SYSTEM      shift, and go to state 127
    CLASS_INTEGER  shift, and go to state 32
    ID             shift, and go to state 35
    '{'            shift, and go to state 128
    '}'            shift, and go to state 151

    VarDecl     go to state 130
    PrimeType   go to state 16
    Type        go to state 131
    Statement   go to state 132
    MethodCall  go to state 133
    LeftValue   go to state 134


State 142

   16 VarDecl: Type ID . EqlExp StaticVarDeclTail ';'

    '='  shift, and go to state 24

    $default  reduce using rule 7 (EqlExp)

    EqlExp  go to state 152


State 143

   33 Statement: MethodCall ';' .

    $default  reduce using rule 33 (Statement)


State 144

   31 Statement: LeftValue '=' . Exp_or ';'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 153
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 145

   18 FormalListTail: FormalListTail ',' Type ID .

    $default  reduce using rule 18 (FormalListTail)


State 146

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STR '[' ']' ID ')' '{' StatementList . '}'
   14 StatementList: StatementList . Statement

    KW_INT         shift, and go to state 13
    KW_BOOL        shift, and go to state 14
    KW_STR         shift, and go to state 15
    KW_IF          shift, and go to state 124
    KW_WHILE       shift, and go to state 125
    KW_RETURN      shift, and go to state 126
    KW_SYSTEM      shift, and go to state 127
    CLASS_INTEGER  shift, and go to state 32
    ID             shift, and go to state 35
    '{'            shift, and go to state 128
    '}'            shift, and go to state 154

    VarDecl     go to state 130
    PrimeType   go to state 16
    Type        go to state 131
    Statement   go to state 132
    MethodCall  go to state 133
    LeftValue   go to state 134


State 147

   27 Statement: KW_IF '(' Exp_or . ')' Statement KW_ELSE Statement
   37 Exp_or: Exp_or . TOK_OR Exp_and

    TOK_OR  shift, and go to state 60
    ')'     shift, and go to state 155


State 148

   28 Statement: KW_WHILE '(' Exp_or . ')' Statement
   37 Exp_or: Exp_or . TOK_OR Exp_and

    TOK_OR  shift, and go to state 60
    ')'     shift, and go to state 156


State 149

   32 Statement: KW_RETURN Exp_or ';' .

    $default  reduce using rule 32 (Statement)


State 150

   29 Statement: KW_SYSTEM '.' KW_OUT . '.' KW_PRINTLN '(' Exp_or ')' ';'
   30          | KW_SYSTEM '.' KW_OUT . '.' KW_PRINT '(' Exp_or ')' ';'

    '.'  shift, and go to state 157


State 151

   26 Statement: '{' StatementList '}' .

    $default  reduce using rule 26 (Statement)


State 152

   16 VarDecl: Type ID EqlExp . StaticVarDeclTail ';'

    $default  reduce using rule 9 (StaticVarDeclTail)

    StaticVarDeclTail  go to state 158


State 153

   31 Statement: LeftValue '=' Exp_or . ';'
   37 Exp_or: Exp_or . TOK_OR Exp_and

    TOK_OR  shift, and go to state 60
    ';'     shift, and go to state 159


State 154

    3 MainMethod: KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STR '[' ']' ID ')' '{' StatementList '}' .

    $default  reduce using rule 3 (MainMethod)


State 155

   27 Statement: KW_IF '(' Exp_or ')' . Statement KW_ELSE Statement

    KW_INT         shift, and go to state 13
    KW_BOOL        shift, and go to state 14
    KW_STR         shift, and go to state 15
    KW_IF          shift, and go to state 124
    KW_WHILE       shift, and go to state 125
    KW_RETURN      shift, and go to state 126
    KW_SYSTEM      shift, and go to state 127
    CLASS_INTEGER  shift, and go to state 32
    ID             shift, and go to state 35
    '{'            shift, and go to state 128

    VarDecl     go to state 130
    PrimeType   go to state 16
    Type        go to state 131
    Statement   go to state 160
    MethodCall  go to state 133
    LeftValue   go to state 134


State 156

   28 Statement: KW_WHILE '(' Exp_or ')' . Statement

    KW_INT         shift, and go to state 13
    KW_BOOL        shift, and go to state 14
    KW_STR         shift, and go to state 15
    KW_IF          shift, and go to state 124
    KW_WHILE       shift, and go to state 125
    KW_RETURN      shift, and go to state 126
    KW_SYSTEM      shift, and go to state 127
    CLASS_INTEGER  shift, and go to state 32
    ID             shift, and go to state 35
    '{'            shift, and go to state 128

    VarDecl     go to state 130
    PrimeType   go to state 16
    Type        go to state 131
    Statement   go to state 161
    MethodCall  go to state 133
    LeftValue   go to state 134


State 157

   29 Statement: KW_SYSTEM '.' KW_OUT '.' . KW_PRINTLN '(' Exp_or ')' ';'
   30          | KW_SYSTEM '.' KW_OUT '.' . KW_PRINT '(' Exp_or ')' ';'

    KW_PRINT    shift, and go to state 162
    KW_PRINTLN  shift, and go to state 163


State 158

    8 StaticVarDeclTail: StaticVarDeclTail . ',' ID EqlExp
   16 VarDecl: Type ID EqlExp StaticVarDeclTail . ';'

    ';'  shift, and go to state 164
    ','  shift, and go to state 74


State 159

   31 Statement: LeftValue '=' Exp_or ';' .

    $default  reduce using rule 31 (Statement)


State 160

   27 Statement: KW_IF '(' Exp_or ')' Statement . KW_ELSE Statement

    KW_ELSE  shift, and go to state 165


State 161

   28 Statement: KW_WHILE '(' Exp_or ')' Statement .

    $default  reduce using rule 28 (Statement)


State 162

   30 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINT . '(' Exp_or ')' ';'

    '('  shift, and go to state 166


State 163

   29 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINTLN . '(' Exp_or ')' ';'

    '('  shift, and go to state 167


State 164

   16 VarDecl: Type ID EqlExp StaticVarDeclTail ';' .

    $default  reduce using rule 16 (VarDecl)


State 165

   27 Statement: KW_IF '(' Exp_or ')' Statement KW_ELSE . Statement

    KW_INT         shift, and go to state 13
    KW_BOOL        shift, and go to state 14
    KW_STR         shift, and go to state 15
    KW_IF          shift, and go to state 124
    KW_WHILE       shift, and go to state 125
    KW_RETURN      shift, and go to state 126
    KW_SYSTEM      shift, and go to state 127
    CLASS_INTEGER  shift, and go to state 32
    ID             shift, and go to state 35
    '{'            shift, and go to state 128

    VarDecl     go to state 130
    PrimeType   go to state 16
    Type        go to state 131
    Statement   go to state 168
    MethodCall  go to state 133
    LeftValue   go to state 134


State 166

   30 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINT '(' . Exp_or ')' ';'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 169
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 167

   29 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINTLN '(' . Exp_or ')' ';'

    KW_NEW         shift, and go to state 29
    KW_TRUE        shift, and go to state 30
    KW_FALSE       shift, and go to state 31
    CLASS_INTEGER  shift, and go to state 32
    INT_LIT        shift, and go to state 33
    STR_LIT        shift, and go to state 34
    ID             shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    MethodCall     go to state 40
    Exp_or         go to state 170
    Exp_and        go to state 42
    Exp_eql        go to state 43
    Exp_ineql      go to state 44
    Exp_plusminus  go to state 45
    Exp_muldiv     go to state 46
    Exp_factor     go to state 47
    Factor         go to state 48
    LeftValue      go to state 49


State 168

   27 Statement: KW_IF '(' Exp_or ')' Statement KW_ELSE Statement .

    $default  reduce using rule 27 (Statement)


State 169

   30 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINT '(' Exp_or . ')' ';'
   37 Exp_or: Exp_or . TOK_OR Exp_and

    TOK_OR  shift, and go to state 60
    ')'     shift, and go to state 171


State 170

   29 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINTLN '(' Exp_or . ')' ';'
   37 Exp_or: Exp_or . TOK_OR Exp_and

    TOK_OR  shift, and go to state 60
    ')'     shift, and go to state 172


State 171

   30 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINT '(' Exp_or ')' . ';'

    ';'  shift, and go to state 173


State 172

   29 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINTLN '(' Exp_or ')' . ';'

    ';'  shift, and go to state 174


State 173

   30 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINT '(' Exp_or ')' ';' .

    $default  reduce using rule 30 (Statement)


State 174

   29 Statement: KW_SYSTEM '.' KW_OUT '.' KW_PRINTLN '(' Exp_or ')' ';' .

    $default  reduce using rule 29 (Statement)
